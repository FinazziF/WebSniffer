#pragma checksum "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "955621f3b60cf3e7ecfca166c1bebb78ec3cda67"
// <auto-generated/>
#pragma warning disable 1591
namespace WebSniffer.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using WebSniffer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\_imports.razor"
using WebSniffer.Pages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
using SharpPcap;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
using PacketDotNet;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/TrafficInterface/{ip}")]
    public partial class TrafficInterface : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "h2");
            __builder.AddContent(1, 
#nullable restore
#line 5 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
     devicePorp[0]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(2, "\r\n");
            __builder.OpenElement(3, "h3");
            __builder.AddContent(4, 
#nullable restore
#line 6 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
     devicePorp[1]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(5, "\r\n<br>\r\n\r\n");
            __builder.AddMarkupContent(6, "<button class=\"btn btn-primary\" @onlick=\"CaptureStart\">Start Capture</button>\r\n<br>\r\n");
            __builder.AddMarkupContent(7, "<button class=\"btn btn-primary\" @onlick=\"CaptureStop\">Stop Capture</button>\r\n\r\n<br>\r\n\r\n");
            __builder.OpenElement(8, "table");
            __builder.AddMarkupContent(9, "<tr><th>Packets</th></tr>");
#nullable restore
#line 19 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
     if (packets != null)
    {
        foreach (var packet in packets)
        {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(10, "tr");
            __builder.OpenElement(11, "td");
            __builder.AddContent(12, 
#nullable restore
#line 24 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
                     packet

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 26 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
        }
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 31 "D:\Progetti\WebSniffer\WebSniffer\WebSniffer\Pages\TrafficInterface.razor"
       

    [Parameter]
    public string ip { get; set; }

    public static ICaptureDevice device { get; set; }
    public string[] devicePorp { get; set; }
    public static List<string> packets { get; set; }

    protected void CaptureStop()
    {
        var device = CaptureDeviceList.Instance.First(x => parseDevice(x)[1] == ip);
        devicePorp = parseDevice(device);
        if (device.Started)
        {
            device.StopCapture();
            device.Close();
        }
    }

    protected void CaptureStart()
    {
        packets = new List<string>();

        var device = CaptureDeviceList.Instance.First(x => parseDevice(x)[1] == ip);
        devicePorp = parseDevice(device);

        if (!device.Started)
        {
            device.Open();
            device.OnPacketArrival += Device_OnPacketArrival;
            device.Filter = "ip and tcp";
            device.StartCapture();
        }
    }

    private void Device_OnPacketArrival(object s, PacketCapture e)
    {
        var packet = Packet.ParsePacket(e.Device.LinkType, e.Data.ToArray());
        string tablePacket = packet.ToString().Replace("][", "]\n\n[");
        //if (packet != null && packet.PayloadPacket != null && packet.PayloadPacket.PayloadPacket != null &&
        //    packet.PayloadPacket.GetType() == typeof(IPv4Packet) &&
        //    packet.PayloadPacket.PayloadPacket.GetType() == typeof(TcpPacket))
        //{
        //    var ipv4 = (IPv4Packet)packet.PayloadPacket;
        //    var tcp = (TcpPacket)ipv4.PayloadPacket;

        //    tablePacket += ("\nFrom: ");
        //    try { tablePacket += Dns.GetHostEntry(ipv4.SourceAddress).HostName; }
        //    catch { tablePacket += ipv4.SourceAddress; }
        //    tablePacket += $" :{tcp.SourcePort}";

        //    tablePacket += "To: ";
        //    try { tablePacket += Dns.GetHostEntry(ipv4.DestinationAddress).HostName; }
        //    catch { tablePacket += ipv4.DestinationAddress; }
        //    tablePacket += $" :{tcp.DestinationPort}";
        //}
        System.Diagnostics.Debug.WriteLine(tablePacket);
        packets.Add(tablePacket);
    }

    protected override void OnInitialized()
    {
        if (ip != null)
        {
            var device = CaptureDeviceList.Instance.First(x => parseDevice(x)[1] == ip);
            devicePorp = parseDevice(device);
        }
    }


    protected string[] parseDevice(ICaptureDevice dev)
    {
        char[] separators = new char[] { '\n', ':' };
        string name = "";
        string ipAddress = "";

        string[] splitStr = dev.ToString().Split(separators);
        for (int i = 0; i < splitStr.Length; i++)
        {
            if (splitStr[i].Equals("FriendlyName"))
            {
                name = splitStr[i + 1].Trim();
            }
            else if (splitStr[i].Equals("Addr"))
            {
                if (splitStr[i + 1].Contains('.'))
                {
                    ipAddress = splitStr[i + 1].Trim();
                }
            }
        }
        if (name.Length == 0)
        {
            if (splitStr.Length > 7)
            {
                name = splitStr[4].Trim();
            }
        }
        if (name.Length == 0)
        {
            name = dev.ToString();
        }
        return new string[] { name, ipAddress };
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
